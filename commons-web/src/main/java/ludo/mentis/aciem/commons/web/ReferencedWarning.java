package ludo.mentis.aciem.commons.web;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;


/**
 * Utility class for handling referenced warnings.
 * <p>
 * This class provides a way to store warnings that reference a message key and
 * a list of parameters. The warnings can be used to display messages in the view
 * that are generated by the controller.
 * </p>
 */
public class ReferencedWarning {

    private String key = null;
    private List<Object> params = new ArrayList<>();

    public void addParam(final Object param) {
        params.add(param);
    }

    /**
     * Converts the referenced warning to a message string.
     * <p>
     * This method constructs a message string by combining the key and the parameters.
     * If the parameters list is not empty, the parameters are appended to the key,
     * separated by commas.
     * </p>
     *
     * @return a string representation of the referenced warning, consisting of the key
     *         followed by the parameters if any are present
     */
    public String toMessage() {
        String message = key;
        if (!params.isEmpty()) {
            message += "," + params.stream().map(Object::toString).collect(Collectors.joining(","));
        }
        return message;
    }

    public String getKey() {
        return key;
    }

    public void setKey(String key) {
        this.key = key;
    }

    public List<Object> getParams() {
        return params;
    }

    public void setParams(List<Object> params) {
        this.params = params;
    }
}
